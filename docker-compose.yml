version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb_vehicletracking
    ports:
      - "27018:27017"
    volumes:
      - mongodb_vehicletracking_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=vehicleTrackingAdmin
      - MONGO_INITDB_ROOT_PASSWORD=vhcTracking123!.
    restart: unless-stopped
    networks:
      - vehicle_tracking_network

  vehicletracking_api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vehicletracking_api
    ports:
      - "7001:7001"
      - "8001:80"
    depends_on:
      - mongodb
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - MongoDbSettings__ConnectionString=mongodb://vehicleTrackingAdmin:vhcTracking123!.@mongodb_vehicletracking:27017
      - MongoDbSettings__DatabaseName=VehicleTracking
      - MongoDbSettings__VehiclesCollectionName=Vehicles
      - MongoDbSettings__LocationHistoryCollectionName=LocationHistory
      - MongoDbSettings__UsersCollectionName=Users
      - MongoDbSettings__RolesCollectionName=Roles
      - MongoDbSettings__PermissionsCollectionName=Permissions
      - MongoDbSettings__TenantsCollectionName=Tenants
      - MongoDbSettings__DevicesCollectionName=Devices
      - MongoDbSettings__TenantCustomFieldsCollectionName=TenantCustomFields
      - MongoDbSettings__UserRolesCollectionName=UserRoles
      - MongoDbSettings__RolePermissionsCollectionName=RolePermissions
      - TcpServer__Port=7001
      - ASPNETCORE_URLS=http://+:80
    networks:
      - vehicle_tracking_network
      - npm_default
    restart: unless-stopped
    labels:
      - "com.docker.compose.project=vehicletracking"

volumes:
  mongodb_vehicletracking_data:
    name: mongodb_vehicletracking_data

networks:
  vehicle_tracking_network:
    name: vehicle_tracking_network
  npm_default:
    external: true
 